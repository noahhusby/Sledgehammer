/*
 * MIT License
 *
 * Copyright 2020-2022 noahhusby
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy,
 * modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software
 * is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
 * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 */

//file:noinspection GroovyAssignabilityCheck
//file:noinspection GrUnresolvedAccess
plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.sonarqube' version '3.5.0.2730'
}

allprojects {
    apply plugin: "java"

    ext {
        semVersion = "0.5.0-rc.1"
        fullVersion = semVersion + "+" + ('git rev-list --count HEAD'.execute().text.trim())

        gsonVersion = "2.10"
        hikariVersion = "4.0.3"
        lombokVersion = "1.18.26"
        husbyVersion = "0.1.137"
        mongoVersion = "3.12.11"
        guavaVersion = "31.1-jre"
        log4jVersion = "2.19.0"
        anvilGuiVersion = "1.5.3-SNAPSHOT"
        paperVersion = "1.12.2-R0.1-SNAPSHOT"
        bungeecordVersion = "1.19-R0.1-SNAPSHOT"
        terraplusplusVersion = "e957dd754c"
        bungee2forgechannelsVersion = "b2d5e0778c"
    }

    group "com.noahhusby"
    version "$fullVersion"

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    processResources {
        filter {
            it.replace('${project.version}', project.fullVersion)
        }
    }

    repositories {
        mavenCentral()
        maven { url 'https://papermc.io/repo/repository/maven-public/' }
        maven { url 'https://jitpack.io/' }
        maven { url 'https://maven.daporkchop.net/' }
        maven { url 'https://maven.noahhusby.com/releases' }
        maven { url 'https://repo.codemc.io/repository/maven-snapshots' }
    }

    dependencies {
        if (!("common".equalsIgnoreCase(project.name))) {
            implementation project(":common")
        }

        implementation "com.noahhusby.lib:data:$husbyVersion"
        implementation "com.noahhusby.lib:application:$husbyVersion"

        compileOnly "org.projectlombok:lombok:$lombokVersion"
        testCompileOnly "org.projectlombok:lombok:$lombokVersion"
        annotationProcessor "org.projectlombok:lombok:$lombokVersion"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    }
}

dependencies {
    for (Project prj : project.allprojects) {
        if (!"sledgehammer".equalsIgnoreCase(prj.name) && prj.parent.name.equalsIgnoreCase("sledgehammer")) {
            implementation project(":" + prj.name)
        }
    }
}

shadowJar {
    archiveFileName = "Sledgehammer-${fullVersion}.jar"
    dependencies {
        exclude(dependency("com.google.code.gson:gson"))
        exclude(dependency("org.yaml:snakeyaml"))
        exclude(dependency("org.slf4j:slf4j-api"))
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "noahhusby_Sledgehammer_AYJmRVsuAstP5YmHRNbC"
    }
}

build.dependsOn shadowJar